#!/usr/bin/env sh

echo ""
echo "üîí Running security checks..."
echo ""

# ====================================
# CRITICAL SECURITY CHECK
# Prevent .env.local from being committed
# ====================================

# Check if .env.local is being committed
if git diff --cached --name-only | grep -E "(^|/)\.env\.local$" > /dev/null 2>&1; then
    echo "‚ùå‚ùå‚ùå CRITICAL ERROR ‚ùå‚ùå‚ùå"
    echo ""
    echo "You are trying to commit .env.local!"
    echo "This file contains sensitive API keys and must NEVER be committed."
    echo ""
    echo "To fix this:"
    echo "  git restore --staged .env.local"
    echo ""
    echo "The file should remain only on your local machine."
    echo ""
    exit 1
fi

# Check if any .env*.local files are being committed
if git diff --cached --name-only | grep -E "\.env.*\.local$" > /dev/null 2>&1; then
    echo "‚ùå‚ùå‚ùå CRITICAL ERROR ‚ùå‚ùå‚ùå"
    echo ""
    echo "You are trying to commit environment files with .local extension!"
    echo "These files contain sensitive credentials and must NEVER be committed."
    echo ""
    echo "Files detected:"
    git diff --cached --name-only | grep -E "\.env.*\.local$"
    echo ""
    echo "To fix this:"
    echo "  git restore --staged <filename>"
    echo ""
    exit 1
fi

# Check for actual API key values (not just env var references)
if git diff --cached | grep -E "(sk-ant-[a-zA-Z0-9]{20,}|sk_live_[a-zA-Z0-9]{20,}|sk_test_[a-zA-Z0-9]{20,})" > /dev/null 2>&1; then
    echo "‚ùå‚ùå‚ùå CRITICAL ERROR ‚ùå‚ùå‚ùå"
    echo ""
    echo "Actual API key values detected in staged files!"
    echo "These appear to be real credentials, not environment variable references."
    echo ""
    echo "Please remove the actual key values before committing."
    echo ""
    exit 1
fi

# Check for backup ZIP files (can contain .env.local)
if git diff --cached --name-only | grep -E "\.zip$" > /dev/null 2>&1; then
    echo "‚ùå‚ùå‚ùå CRITICAL ERROR ‚ùå‚ùå‚ùå"
    echo ""
    echo "ZIP files detected in staged changes!"
    echo "Backup files can contain .env.local and must NEVER be committed."
    echo ""
    echo "Files detected:"
    git diff --cached --name-only | grep -E "\.zip$"
    echo ""
    echo "To fix this:"
    echo "  git restore --staged <filename.zip>"
    echo ""
    echo "Backups should remain local only."
    echo ""
    exit 1
fi

# Check for backup directory
if git diff --cached --name-only | grep -E "^backup/" > /dev/null 2>&1; then
    echo "‚ö†Ô∏è  WARNING: Files from backup/ directory detected"
    echo ""
    echo "Ensure backup files don't contain sensitive data before committing."
    echo ""
fi

echo "‚úÖ Security checks passed - no sensitive files detected"
echo ""
