rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection - users can only access their own document
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent user deletion through Firestore
    }

    // Drafts collection - users can only access their own drafts
    match /drafts/{draftId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;

      // Draft versions subcollection
      match /versions/{versionId} {
        allow read: if isAuthenticated() && get(/databases/$(database)/documents/drafts/$(draftId)).data.userId == request.auth.uid;
        allow create: if isAuthenticated() && get(/databases/$(database)/documents/drafts/$(draftId)).data.userId == request.auth.uid;
        allow update: if false; // Versions are immutable
        allow delete: if isAuthenticated() && get(/databases/$(database)/documents/drafts/$(draftId)).data.userId == request.auth.uid;
      }
    }

    // Campaigns collection - users can only access their own campaigns
    match /campaigns/{campaignId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Campaign templates - public read-only
    match /campaignTemplates/{templateId} {
      allow read: if true; // Public read access
      allow write: if false; // Only admins can write (managed through Firebase Console or Cloud Functions)
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
